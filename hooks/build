#!/bin/sh

docker run --privileged --rm tonistiigi/binfmt --install all

docker buildx create --use default

ver=$(echo "${DOCKER_TAG}"|cut -d- -f2)
if [ "$ver" ]; then
    ver="-$ver"
fi

echo "## Building layers for tag '$DOCKER_TAG' and version '$ver'"

for layer in $(grep -v "^\s*#" tags.txt); do
    echo "############################################################"
    echo "### building layer '$layer'"
    echo "### $ docker build --build-arg TAGVER=$ver"
    echo "### >  -t $DOCKER_REPO:$layer $layer/"

    if [ "$SOURCE_COMMIT" ]; then
        echo "############################################################"
        echo "### pulling latest image, so layer cache is update."
        docker pull $DOCKER_REPO:$layer || true
    fi

    echo "############################################################"
    if [ "$ver" ]; then
        docker buildx build --push --platform linux/amd64,linux/arm64 --build-arg "TAGVER=$ver" \
        -t $DOCKER_REPO:$layer \
        -t $DOCKER_REPO:$layer$ver "$layer/"
    else
        docker buildx build --push --platform linux/amd64,linux/arm64 --build-arg "TAGVER=$ver" \
        -t $DOCKER_REPO:$layer "$layer/"
    fi
    res=$?
    if [ $res -ne 0 ]; then
        echo "Building layer $layer returned $res" >&2
        exit $res
    fi
done
